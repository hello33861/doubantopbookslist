name: Release
on:
  push:
    branches: [ main, master ]
    tags:
      - "v*.*.*"
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            wget \
            file \
            libssl-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            libwebkit2gtk-4.1-dev \
            patchelf

      - name: Prepare build directory (Unix)
        if: matrix.platform != 'windows-latest'
        run: |
          mkdir -p .distDir
          cp *.html .distDir/ 2>/dev/null || true
          cp *.js .distDir/ 2>/dev/null || true
          cp *.css .distDir/ 2>/dev/null || true
          cp *.json .distDir/ 2>/dev/null || true
          ls -la .distDir

      - name: Prepare build directory (Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path .distDir
          Copy-Item -Path "*.html" -Destination ".distDir\" -ErrorAction SilentlyContinue
          Copy-Item -Path "*.js" -Destination ".distDir\" -ErrorAction SilentlyContinue
          Copy-Item -Path "*.css" -Destination ".distDir\" -ErrorAction SilentlyContinue
          Copy-Item -Path "*.json" -Destination ".distDir\" -ErrorAction SilentlyContinue
          Get-ChildItem .distDir

      - name: Install frontend dependencies
        run: npm install

      - name: Build the app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false